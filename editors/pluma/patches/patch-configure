$NetBSD: patch-configure,v 1.1 2018/11/16 19:01:25 bsiegert Exp $

Allow use of enchant-2.

--- configure.orig	2018-03-25 08:39:40.000000000 +0000
+++ configure
@@ -14382,7 +14382,7 @@ $as_echo "#define ENABLE_GVFS_METADATA 1
 fi
 
 
-ENCHANT_REQUIRED=1.2.0
+ENCHANT_REQUIRED=2.0.0
 ISO_CODES_REQUIRED=0.35
 
 # Check whether --enable-spell was given.
@@ -14404,12 +14404,12 @@ if test -n "$ENCHANT_CFLAGS"; then
     pkg_cv_ENCHANT_CFLAGS="$ENCHANT_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"enchant >= \$ENCHANT_REQUIRED\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "enchant >= $ENCHANT_REQUIRED") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"enchant-2 >= \$ENCHANT_REQUIRED\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "enchant-2 >= $ENCHANT_REQUIRED") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_ENCHANT_CFLAGS=`$PKG_CONFIG --cflags "enchant >= $ENCHANT_REQUIRED" 2>/dev/null`
+  pkg_cv_ENCHANT_CFLAGS=`$PKG_CONFIG --cflags "enchant-2 >= $ENCHANT_REQUIRED" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -14421,12 +14421,12 @@ if test -n "$ENCHANT_LIBS"; then
     pkg_cv_ENCHANT_LIBS="$ENCHANT_LIBS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"enchant >= \$ENCHANT_REQUIRED\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "enchant >= $ENCHANT_REQUIRED") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"enchant-2 >= \$ENCHANT_REQUIRED\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "enchant-2 >= $ENCHANT_REQUIRED") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_ENCHANT_LIBS=`$PKG_CONFIG --libs "enchant >= $ENCHANT_REQUIRED" 2>/dev/null`
+  pkg_cv_ENCHANT_LIBS=`$PKG_CONFIG --libs "enchant-2 >= $ENCHANT_REQUIRED" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -14447,9 +14447,9 @@ else
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        ENCHANT_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "enchant >= $ENCHANT_REQUIRED" 2>&1`
+	        ENCHANT_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "enchant-2 >= $ENCHANT_REQUIRED" 2>&1`
         else
-	        ENCHANT_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "enchant >= $ENCHANT_REQUIRED" 2>&1`
+	        ENCHANT_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "enchant-2 >= $ENCHANT_REQUIRED" 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$ENCHANT_PKG_ERRORS" >&5
